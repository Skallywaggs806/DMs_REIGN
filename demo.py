from src.save_to_file import save_to_file
from src.dice_rolling import roll_dice, roll_dice_stats
from src.npc_gen import generate_npc
from src.dnd_data import *
from src.encounter_generator import generate_encounter
from src.log_magic_items import log_magic_items
from src.generate_gold import generate_gold

print("starting tests...")

#test generate_npc
generate_npc(1)
generate_npc(2)
generate_npc(3)
generate_npc(4)
generate_npc(5)
generate_npc(6)
generate_npc(7)
generate_npc(8)
generate_npc(9)
generate_npc(10)
generate_npc(11)
generate_npc(12)
generate_npc(13)
generate_npc(14)
generate_npc(15)
generate_npc(16)
generate_npc(17)
generate_npc(18)
generate_npc(19)
generate_npc(20)
generate_npc(21)
generate_npc(22)
generate_npc(23)
generate_npc(24)
generate_npc(25)
generate_npc(26)
generate_npc(27)
generate_npc(28)
generate_npc(29)
generate_npc(30)
generate_npc(31)
generate_npc(32)
generate_npc(33)
generate_npc(34)
generate_npc(35)
generate_npc(36)
generate_npc(37)
generate_npc(38)
generate_npc(39)
generate_npc(40)
generate_npc(41)
generate_npc(42)
generate_npc(43)
generate_npc(44)
generate_npc(45)
generate_npc(46)
generate_npc(47)
generate_npc(48)
generate_npc(49)
generate_npc(50)
generate_npc(51)
generate_npc(52)
generate_npc(53)
generate_npc(54)
generate_npc(55)
generate_npc(56)
generate_npc(57)
generate_npc(58)
generate_npc(59)
generate_npc(60)
generate_npc(61)
generate_npc(62)
generate_npc(63)
generate_npc(64)
generate_npc(65)
generate_npc(66)
generate_npc(67)
generate_npc(68)
generate_npc(69)
generate_npc(70)
generate_npc(71)
generate_npc(72)
generate_npc(73)
generate_npc(74)
generate_npc(75)
generate_npc(76)
generate_npc(77)
generate_npc(78)
generate_npc(79)
generate_npc(80)
generate_npc(81)
generate_npc(82)
generate_npc(83)
generate_npc(84)
generate_npc(85)
generate_npc(86)
generate_npc(87)
generate_npc(88)
generate_npc(89)
generate_npc(90)
generate_npc(91)
generate_npc(92)
generate_npc(93)
generate_npc(94)
generate_npc(95)
generate_npc(96)
generate_npc(97)
generate_npc(98)
generate_npc(99)
generate_npc(100)

#test roll_dice
save_to_file(f"Dice roll test 1: {roll_dice('1d20+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 2: {roll_dice('2d6+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 3: {roll_dice('1d8+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 4: {roll_dice('3d10+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 5: {roll_dice('4d4+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 6: {roll_dice('2d12+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 7: {roll_dice('1d20+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 8: {roll_dice('5d6+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 9: {roll_dice('3d8+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 10: {roll_dice('2d10+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 11: {roll_dice('1d100+7')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 12: {roll_dice('4d6+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 13: {roll_dice('2d20+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 14: {roll_dice('3d12+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 15: {roll_dice('1d6+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 16: {roll_dice('6d4+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 17: {roll_dice('2d8+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 18: {roll_dice('5d10+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 19: {roll_dice('1d4+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 20: {roll_dice('3d20+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 21: {roll_dice('4d8+6')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 22: {roll_dice('2d4+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 23: {roll_dice('1d12+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 24: {roll_dice('3d6+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 25: {roll_dice('2d10+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 26: {roll_dice('5d8+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 27: {roll_dice('1d20+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 28: {roll_dice('4d6+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 29: {roll_dice('2d12+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 30: {roll_dice('3d4+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 31: {roll_dice('1d8+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 32: {roll_dice('6d10+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 33: {roll_dice('2d20+6')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 34: {roll_dice('4d12+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 35: {roll_dice('1d6+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 36: {roll_dice('3d8+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 37: {roll_dice('2d4+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 38: {roll_dice('5d6+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 39: {roll_dice('1d10+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 40: {roll_dice('3d20+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 41: {roll_dice('4d4+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 42: {roll_dice('2d8+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 43: {roll_dice('1d12+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 44: {roll_dice('6d6+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 45: {roll_dice('3d10+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 46: {roll_dice('2d20+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 47: {roll_dice('4d8+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 48: {roll_dice('1d4+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 49: {roll_dice('5d12+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 50: {roll_dice('2d6+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 51: {roll_dice('3d4+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 52: {roll_dice('1d8+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 53: {roll_dice('4d10+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 54: {roll_dice('2d12+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 55: {roll_dice('5d6+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 56: {roll_dice('3d20+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 57: {roll_dice('1d4+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 58: {roll_dice('2d8+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 59: {roll_dice('6d6+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 60: {roll_dice('3d10+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 61: {roll_dice('4d12+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 62: {roll_dice('2d20+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 63: {roll_dice('1d6+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 64: {roll_dice('5d4+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 65: {roll_dice('3d8+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 66: {roll_dice('2d10+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 67: {roll_dice('4d6+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 68: {roll_dice('1d20+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 69: {roll_dice('6d4+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 70: {roll_dice('2d12+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 71: {roll_dice('3d6+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 72: {roll_dice('1d8+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 73: {roll_dice('4d10+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 74: {roll_dice('2d20+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 75: {roll_dice('5d6+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 76: {roll_dice('3d4+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 77: {roll_dice('1d12+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 78: {roll_dice('4d8+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 79: {roll_dice('2d6+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 80: {roll_dice('6d10+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 81: {roll_dice('3d20+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 82: {roll_dice('1d4+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 83: {roll_dice('5d8+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 84: {roll_dice('2d12+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 85: {roll_dice('4d6+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 86: {roll_dice('1d20+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 87: {roll_dice('3d10+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 88: {roll_dice('2d4+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 89: {roll_dice('6d8+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 90: {roll_dice('1d6+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 91: {roll_dice('4d12+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 92: {roll_dice('2d20+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 93: {roll_dice('5d4+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 94: {roll_dice('3d8+4')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 95: {roll_dice('1d10+1')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 96: {roll_dice('4d6+3')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 97: {roll_dice('2d12+2')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 98: {roll_dice('6d4+0')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 99: {roll_dice('3d20+5')}", "DM_Data/roll_results_logs.txt")
save_to_file(f"Dice roll test 100: {roll_dice('1d8+3')}", "DM_Data/roll_results_logs.txt")



#test generate_encounter
generate_encounter(1, 1, "Test Encounter 1")
generate_encounter(3, 2, "Test Encounter 2")
generate_encounter(5, 1, "Test Encounter 3")
generate_encounter(2, 4, "Test Encounter 4")
generate_encounter(7, 3, "Test Encounter 5")
generate_encounter(1, 5, "Test Encounter 6")
generate_encounter(4, 2, "Test Encounter 7")
generate_encounter(6, 1, "Test Encounter 8")
generate_encounter(2, 3, "Test Encounter 9")
generate_encounter(8, 4, "Test Encounter 10")
generate_encounter(3, 5, "Test Encounter 11")
generate_encounter(3, 5, "Test Encounter 12")
generate_encounter(4, 2, "Test Encounter 13")
generate_encounter(6, 1, "Test Encounter 14")
generate_encounter(2, 4, "Test Encounter 15")
generate_encounter(5, 3, "Test Encounter 16")
generate_encounter(1, 6, "Test Encounter 17")
generate_encounter(7, 2, "Test Encounter 18")
generate_encounter(3, 4, "Test Encounter 19")
generate_encounter(2, 5, "Test Encounter 20")
generate_encounter(6, 3, "Test Encounter 21")
generate_encounter(4, 1, "Test Encounter 22")
generate_encounter(5, 2, "Test Encounter 23")
generate_encounter(3, 6, "Test Encounter 24")
generate_encounter(2, 7, "Test Encounter 25")
generate_encounter(4, 4, "Test Encounter 26")
generate_encounter(6, 2, "Test Encounter 27")
generate_encounter(1, 5, "Test Encounter 28")
generate_encounter(3, 3, "Test Encounter 29")
generate_encounter(5, 4, "Test Encounter 30")
generate_encounter(2, 6, "Test Encounter 31")
generate_encounter(7, 1, "Test Encounter 32")
generate_encounter(4, 3, "Test Encounter 33")
generate_encounter(6, 5, "Test Encounter 34")
generate_encounter(3, 2, "Test Encounter 35")
generate_encounter(5, 1, "Test Encounter 36")
generate_encounter(2, 4, "Test Encounter 37")
generate_encounter(1, 7, "Test Encounter 38")
generate_encounter(4, 6, "Test Encounter 39")
generate_encounter(3, 5, "Test Encounter 40")
generate_encounter(6, 4, "Test Encounter 41")
generate_encounter(2, 3, "Test Encounter 42")
generate_encounter(5, 2, "Test Encounter 43")
generate_encounter(7, 3, "Test Encounter 44")
generate_encounter(1, 4, "Test Encounter 45")
generate_encounter(3, 6, "Test Encounter 46")
generate_encounter(4, 2, "Test Encounter 47")
generate_encounter(6, 1, "Test Encounter 48")
generate_encounter(2, 5, "Test Encounter 49")
generate_encounter(5, 3, "Test Encounter 50")
generate_encounter(3, 4, "Test Encounter 51")
generate_encounter(7, 2, "Test Encounter 52")
generate_encounter(1, 6, "Test Encounter 53")
generate_encounter(4, 5, "Test Encounter 54")
generate_encounter(6, 3, "Test Encounter 55")
generate_encounter(2, 7, "Test Encounter 56")
generate_encounter(5, 1, "Test Encounter 57")
generate_encounter(3, 2, "Test Encounter 58")
generate_encounter(4, 4, "Test Encounter 59")
generate_encounter(6, 6, "Test Encounter 60")
generate_encounter(1, 3, "Test Encounter 61")
generate_encounter(5, 5, "Test Encounter 62")
generate_encounter(2, 4, "Test Encounter 63")
generate_encounter(7, 1, "Test Encounter 64")
generate_encounter(3, 3, "Test Encounter 65")
generate_encounter(4, 2, "Test Encounter 66")
generate_encounter(6, 5, "Test Encounter 67")
generate_encounter(1, 7, "Test Encounter 68")
generate_encounter(5, 4, "Test Encounter 69")
generate_encounter(2, 6, "Test Encounter 70")
generate_encounter(3, 1, "Test Encounter 71")
generate_encounter(4, 3, "Test Encounter 72")
generate_encounter(6, 2, "Test Encounter 73")
generate_encounter(5, 5, "Test Encounter 74")
generate_encounter(1, 4, "Test Encounter 75")
generate_encounter(7, 3, "Test Encounter 76")
generate_encounter(2, 2, "Test Encounter 77")
generate_encounter(3, 6, "Test Encounter 78")
generate_encounter(4, 1, "Test Encounter 79")
generate_encounter(6, 4, "Test Encounter 80")
generate_encounter(5, 2, "Test Encounter 81")
generate_encounter(1, 5, "Test Encounter 82")
generate_encounter(3, 7, "Test Encounter 83")
generate_encounter(4, 4, "Test Encounter 84")
generate_encounter(6, 3, "Test Encounter 85")
generate_encounter(2, 1, "Test Encounter 86")
generate_encounter(5, 6, "Test Encounter 87")
generate_encounter(7, 2, "Test Encounter 88")
generate_encounter(3, 5, "Test Encounter 89")
generate_encounter(1, 3, "Test Encounter 90")
generate_encounter(4, 6, "Test Encounter 91")
generate_encounter(6, 1, "Test Encounter 92")
generate_encounter(2, 4, "Test Encounter 93")
generate_encounter(5, 3, "Test Encounter 94")
generate_encounter(3, 2, "Test Encounter 95")
generate_encounter(7, 5, "Test Encounter 96")
generate_encounter(1, 6, "Test Encounter 97")
generate_encounter(4, 4, "Test Encounter 98")
generate_encounter(6, 2, "Test Encounter 99")
generate_encounter(2, 7, "Test Encounter 100")


#test log_magic_items
log_magic_items("Player1", "Sword of Destiny", "A legendary sword that grants its wielder immense power.")
log_magic_items("Player1", "Sword of Destiny", "A legendary sword that grants its wielder immense power.")
log_magic_items("Player2", "Cloak of Shadows", "A cloak that allows the wearer to blend into darkness.")
log_magic_items("Player3", "Ring of Protection", "A ring that grants a protective aura to the wearer.")
log_magic_items("Player4", "Staff of Elements", "A staff that channels elemental forces.")
log_magic_items("Player1", "Amulet of Wisdom", "An amulet that enhances the wearer's intellect.")
log_magic_items("Player5", "Boots of Speed", "Boots that grant supernatural agility.")
log_magic_items("Player2", "Shield of Valor", "A shield that bolsters courage in battle.")
log_magic_items("Player3", "Wand of Fire", "A wand that shoots flames at will.")
log_magic_items("Player4", "Helm of Insight", "A helmet that reveals hidden truths.")
log_magic_items("Player1", "Gloves of Dexterity", "Gloves that enhance precision and skill.")
log_magic_items("Player5", "Pendant of Life", "A pendant that promotes healing.")
log_magic_items("Player2", "Blade of Frost", "A sword imbued with icy power.")
log_magic_items("Player3", "Robe of Stars", "A robe that grants cosmic awareness.")
log_magic_items("Player4", "Orb of Storms", "An orb that controls weather.")
log_magic_items("Player1", "Ring of Invisibility", "A ring that renders the wearer unseen.")
log_magic_items("Player5", "Cape of Flight", "A cape that allows brief flight.")
log_magic_items("Player2", "Scepter of Light", "A scepter that radiates holy energy.")
log_magic_items("Player3", "Tome of Secrets", "A book filled with arcane knowledge.")
log_magic_items("Player4", "Gauntlets of Strength", "Gauntlets that enhance physical power.")
log_magic_items("Player1", "Crystal of Vision", "A crystal that shows distant places.")
log_magic_items("Player5", "Belt of Endurance", "A belt that boosts stamina.")
log_magic_items("Player2", "Dagger of Venom", "A dagger that poisons its target.")
log_magic_items("Player3", "Mirror of Truth", "A mirror that reveals lies.")
log_magic_items("Player4", "Chalice of Purity", "A chalice that purifies liquids.")
log_magic_items("Player1", "Bow of Precision", "A bow that never misses its mark.")
log_magic_items("Player5", "Cloak of Resistance", "A cloak that wards off magic.")
log_magic_items("Player2", "Amulet of Courage", "An amulet that inspires bravery.")
log_magic_items("Player3", "Staff of Healing", "A staff that restores health.")
log_magic_items("Player4", "Ring of Teleportation", "A ring that allows short-range teleportation.")
log_magic_items("Player1", "Pendant of Clarity", "A pendant that sharpens the mind.")
log_magic_items("Player5", "Gloves of Stealth", "Gloves that aid in silent movement.")
log_magic_items("Player2", "Sword of Light", "A sword that glows with radiant energy.")
log_magic_items("Player3", "Orb of Divination", "An orb that predicts future events.")
log_magic_items("Player4", "Boots of Levitation", "Boots that allow the wearer to hover.")
log_magic_items("Player1", "Helm of Telepathy", "A helmet that reads thoughts.")
log_magic_items("Player5", "Robe of Protection", "A robe that deflects attacks.")
log_magic_items("Player2", "Wand of Ice", "A wand that freezes its target.")
log_magic_items("Player3", "Ring of Strength", "A ring that boosts physical might.")
log_magic_items("Player4", "Cloak of Invisibility", "A cloak that hides the wearer.")
log_magic_items("Player1", "Scepter of Power", "A scepter that amplifies magic.")
log_magic_items("Player5", "Shield of Deflection", "A shield that redirects projectiles.")
log_magic_items("Player2", "Amulet of Protection", "An amulet that guards against harm.")
log_magic_items("Player3", "Blade of Thunder", "A blade that crackles with electricity.")
log_magic_items("Player4", "Tome of Wisdom", "A book that imparts great knowledge.")
log_magic_items("Player1", "Ring of Fire", "A ring that summons flames.")
log_magic_items("Player5", "Gauntlets of Speed", "Gauntlets that quicken attacks.")
log_magic_items("Player2", "Cape of Shadows", "A cape that obscures the wearer.")
log_magic_items("Player3", "Staff of Lightning", "A staff that unleashes bolts of lightning.")
log_magic_items("Player4", "Pendant of Insight", "A pendant that enhances perception.")
log_magic_items("Player1", "Bow of Flame", "A bow that shoots fiery arrows.")
log_magic_items("Player5", "Robe of Elements", "A robe that channels elemental magic.")
log_magic_items("Player2", "Dagger of Silence", "A dagger that silences its victims.")
log_magic_items("Player3", "Orb of Light", "An orb that emits blinding light.")
log_magic_items("Player4", "Gloves of Power", "Gloves that amplify strength.")
log_magic_items("Player1", "Helm of Vision", "A helmet that enhances sight.")
log_magic_items("Player5", "Ring of Healing", "A ring that mends wounds.")
log_magic_items("Player2", "Scepter of Frost", "A scepter that freezes the air.")
log_magic_items("Player3", "Cloak of Flight", "A cloak that grants sustained flight.")
log_magic_items("Player4", "Wand of Thunder", "A wand that unleashes sonic booms.")
log_magic_items("Player1", "Amulet of Strength", "An amulet that boosts physical power.")
log_magic_items("Player5", "Boots of Stealth", "Boots that muffle footsteps.")
log_magic_items("Player2", "Sword of Ice", "A sword that chills its foes.")
log_magic_items("Player3", "Tome of Power", "A book that enhances spellcasting.")
log_magic_items("Player4", "Ring of Levitation", "A ring that allows floating.")
log_magic_items("Player1", "Shield of Light", "A shield that emits radiant energy.")
log_magic_items("Player5", "Cape of Protection", "A cape that absorbs damage.")
log_magic_items("Player2", "Orb of Fire", "An orb that summons flames.")
log_magic_items("Player3", "Gloves of Precision", "Gloves that enhance accuracy.")
log_magic_items("Player4", "Staff of Wisdom", "A staff that imparts great intellect.")
log_magic_items("Player1", "Pendant of Fire", "A pendant that ignites nearby objects.")
log_magic_items("Player5", "Robe of Stealth", "A robe that aids in hiding.")
log_magic_items("Player2", "Wand of Light", "A wand that glows brightly.")
log_magic_items("Player3", "Helm of Strength", "A helmet that boosts endurance.")
log_magic_items("Player4", "Dagger of Frost", "A dagger that freezes on contact.")
log_magic_items("Player1", "Ring of Clarity", "A ring that sharpens focus.")
log_magic_items("Player5", "Scepter of Healing", "A scepter that restores vitality.")
log_magic_items("Player2", "Cloak of Resistance", "A cloak that resists magic.")
log_magic_items("Player3", "Bow of Thunder", "A bow that shoots electrified arrows.")
log_magic_items("Player4", "Amulet of Insight", "An amulet that reveals secrets.")
log_magic_items("Player1", "Gloves of Flight", "Gloves that aid in soaring.")
log_magic_items("Player5", "Orb of Ice", "An orb that chills the surroundings.")
log_magic_items("Player2", "Staff of Fire", "A staff that summons flames.")
log_magic_items("Player3", "Cape of Levitation", "A cape that allows hovering.")
log_magic_items("Player4", "Ring of Power", "A ring that amplifies abilities.")
log_magic_items("Player1", "Tome of Insight", "A book that grants deep understanding.")
log_magic_items("Player5", "Sword of Shadows", "A sword that manipulates darkness.")
log_magic_items("Player2", "Helm of Protection", "A helmet that wards off attacks.")
log_magic_items("Player3", "Wand of Healing", "A wand that mends injuries.")
log_magic_items("Player4", "Boots of Strength", "Boots that enhance physical might.")
log_magic_items("Player1", "Cloak of Fire", "A cloak that burns with magical flame.")
log_magic_items("Player5", "Ring of Stealth", "A ring that aids in concealment.")
log_magic_items("Player2", "Scepter of Thunder", "A scepter that unleashes sonic waves.")
log_magic_items("Player3", "Gloves of Wisdom", "Gloves that enhance intellect.")
log_magic_items("Player4", "Orb of Healing", "An orb that restores health.")
log_magic_items("Player1", "Staff of Shadows", "A staff that manipulates shadows.")
log_magic_items("Player5", "Pendant of Levitation", "A pendant that allows floating.")
log_magic_items("Player2", "Bow of Light", "A bow that shoots radiant arrows.")
log_magic_items("Player3", "Robe of Power", "A robe that amplifies magic.")
log_magic_items("Player4", "Dagger of Thunder", "A dagger that crackles with electricity.")

#test generate_gold
save_to_file(f"Generated gold for test1: {generate_gold(level=1, type='low_level')}(Lvl:1 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test2: {generate_gold(level=3, type='mid_level')}(Lvl:3 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test3: {generate_gold(level=5, type='high_level')}(Lvl:5 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test4: {generate_gold(level=2, type='low_level')}(Lvl:2 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test5: {generate_gold(level=7, type='mid_level')}(Lvl:7 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test6: {generate_gold(level=10, type='high_level')}(Lvl:10 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test7: {generate_gold(level=4, type='low_level')}(Lvl:4 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test8: {generate_gold(level=8, type='mid_level')}(Lvl:8 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test9: {generate_gold(level=12, type='high_level')}(Lvl:12 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test10: {generate_gold(level=6, type='low_level')}(Lvl:6 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test11: {generate_gold(level=9, type='mid_level')}(Lvl:9 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test12: {generate_gold(level=15, type='high_level')}(Lvl:15 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test13: {generate_gold(level=11, type='low_level')}(Lvl:11 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test14: {generate_gold(level=14, type='mid_level')}(Lvl:14 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test15: {generate_gold(level=18, type='high_level')}(Lvl:18 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test16: {generate_gold(level=13, type='low_level')}(Lvl:13 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test17: {generate_gold(level=17, type='mid_level')}(Lvl:17 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test18: {generate_gold(level=20, type='high_level')}(Lvl:20 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test19: {generate_gold(level=16, type='low_level')}(Lvl:16 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test20: {generate_gold(level=19, type='mid_level')}(Lvl:19 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test21: {generate_gold(level=20, type='high_level')}(Lvl:20 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test22: {generate_gold(level=19, type='low_level')}(Lvl:19 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test23: {generate_gold(level=18, type='mid_level')}(Lvl:18 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test24: {generate_gold(level=17, type='high_level')}(Lvl:17 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test25: {generate_gold(level=16, type='low_level')}(Lvl:16 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test26: {generate_gold(level=15, type='mid_level')}(Lvl:15 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test27: {generate_gold(level=14, type='high_level')}(Lvl:14 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test28: {generate_gold(level=13, type='low_level')}(Lvl:13 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test29: {generate_gold(level=12, type='mid_level')}(Lvl:12 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test30: {generate_gold(level=11, type='high_level')}(Lvl:11 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test31: {generate_gold(level=2, type='mid_level')}(Lvl:2 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test32: {generate_gold(level=3, type='high_level')}(Lvl:3 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test33: {generate_gold(level=4, type='mid_level')}(Lvl:4 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test34: {generate_gold(level=5, type='low_level')}(Lvl:5 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test35: {generate_gold(level=6, type='high_level')}(Lvl:6 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test36: {generate_gold(level=7, type='low_level')}(Lvl:7 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test37: {generate_gold(level=8, type='high_level')}(Lvl:8 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test38: {generate_gold(level=9, type='low_level')}(Lvl:9 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test39: {generate_gold(level=10, type='mid_level')}(Lvl:10 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test40: {generate_gold(level=11, type='high_level')}(Lvl:11 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test41: {generate_gold(level=12, type='mid_level')}(Lvl:12 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test42: {generate_gold(level=13, type='high_level')}(Lvl:13 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test43: {generate_gold(level=14, type='low_level')}(Lvl:14 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test44: {generate_gold(level=15, type='mid_level')}(Lvl:15 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test45: {generate_gold(level=16, type='high_level')}(Lvl:16 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test46: {generate_gold(level=17, type='low_level')}(Lvl:17 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test47: {generate_gold(level=18, type='mid_level')}(Lvl:18 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test48: {generate_gold(level=19, type='high_level')}(Lvl:19 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test49: {generate_gold(level=20, type='mid_level')}(Lvl:20 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test50: {generate_gold(level=1, type='high_level')}(Lvl:1 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test51: {generate_gold(level=2, type='low_level')}(Lvl:2 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test52: {generate_gold(level=3, type='mid_level')}(Lvl:3 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test53: {generate_gold(level=4, type='high_level')}(Lvl:4 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test54: {generate_gold(level=5, type='mid_level')}(Lvl:5 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test55: {generate_gold(level=6, type='high_level')}(Lvl:6 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test56: {generate_gold(level=7, type='mid_level')}(Lvl:7 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test57: {generate_gold(level=8, type='low_level')}(Lvl:8 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test58: {generate_gold(level=9, type='high_level')}(Lvl:9 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test59: {generate_gold(level=10, type='mid_level')}(Lvl:10 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test60: {generate_gold(level=11, type='high_level')}(Lvl:11 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test61: {generate_gold(level=12, type='low_level')}(Lvl:12 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test62: {generate_gold(level=13, type='mid_level')}(Lvl:13 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test63: {generate_gold(level=14, type='high_level')}(Lvl:14 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test64: {generate_gold(level=15, type='mid_level')}(Lvl:15 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test65: {generate_gold(level=16, type='low_level')}(Lvl:16 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test66: {generate_gold(level=17, type='high_level')}(Lvl:17 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test67: {generate_gold(level=18, type='mid_level')}(Lvl:18 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test68: {generate_gold(level=19, type='high_level')}(Lvl:19 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test69: {generate_gold(level=20, type='low_level')}(Lvl:20 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test70: {generate_gold(level=1, type='mid_level')}(Lvl:1 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test71: {generate_gold(level=2, type='high_level')}(Lvl:2 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test72: {generate_gold(level=3, type='low_level')}(Lvl:3 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test73: {generate_gold(level=4, type='mid_level')}(Lvl:4 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test74: {generate_gold(level=5, type='high_level')}(Lvl:5 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test75: {generate_gold(level=6, type='mid_level')}(Lvl:6 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test76: {generate_gold(level=7, type='low_level')}(Lvl:7 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test77: {generate_gold(level=8, type='high_level')}(Lvl:8 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test78: {generate_gold(level=9, type='mid_level')}(Lvl:9 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test79: {generate_gold(level=10, type='low_level')}(Lvl:10 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test80: {generate_gold(level=11, type='high_level')}(Lvl:11 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test81: {generate_gold(level=12, type='mid_level')}(Lvl:12 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test82: {generate_gold(level=13, type='low_level')}(Lvl:13 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test83: {generate_gold(level=14, type='mid_level')}(Lvl:14 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test84: {generate_gold(level=15, type='high_level')}(Lvl:15 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test85: {generate_gold(level=16, type='low_level')}(Lvl:16 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test86: {generate_gold(level=17, type='mid_level')}(Lvl:17 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test87: {generate_gold(level=18, type='high_level')}(Lvl:18 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test88: {generate_gold(level=19, type='low_level')}(Lvl:19 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test89: {generate_gold(level=20, type='mid_level')}(Lvl:20 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test90: {generate_gold(level=1, type='mid_level')}(Lvl:1 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test91: {generate_gold(level=2, type='high_level')}(Lvl:2 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test92: {generate_gold(level=3, type='low_level')}(Lvl:3 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test93: {generate_gold(level=4, type='mid_level')}(Lvl:4 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test94: {generate_gold(level=5, type='high_level')}(Lvl:5 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test95: {generate_gold(level=6, type='mid_level')}(Lvl:6 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test96: {generate_gold(level=7, type='low_level')}(Lvl:7 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test97: {generate_gold(level=8, type='high_level')}(Lvl:8 Type:high_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test98: {generate_gold(level=9, type='mid_level')}(Lvl:9 Type:mid_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test99: {generate_gold(level=10, type='low_level')}(Lvl:10 Type:low_level)", "DM_Data/gold_logs.txt")
save_to_file(f"Generated gold for test100: {generate_gold(level=11, type='high_level')}(Lvl:11 Type:high_level)", "DM_Data/gold_logs.txt")


print("tests completed successfully.")